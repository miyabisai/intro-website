[{"/Users/yalin/Documents/Git/javascrpt_note/intro-website/src/index.js":"1","/Users/yalin/Documents/Git/javascrpt_note/intro-website/src/App.js":"2","/Users/yalin/Documents/Git/javascrpt_note/intro-website/src/reportWebVitals.js":"3","/Users/yalin/Documents/Git/javascrpt_note/intro-website/src/context/position.content.jsx":"4","/Users/yalin/Documents/Git/javascrpt_note/intro-website/src/context/toggle.context.jsx":"5","/Users/yalin/Documents/Git/javascrpt_note/intro-website/src/routes/about/about.component.jsx":"6","/Users/yalin/Documents/Git/javascrpt_note/intro-website/src/routes/contact/contact.component.jsx":"7","/Users/yalin/Documents/Git/javascrpt_note/intro-website/src/routes/navigation/navigation.component.jsx":"8","/Users/yalin/Documents/Git/javascrpt_note/intro-website/src/routes/resume/resume.component.jsx":"9","/Users/yalin/Documents/Git/javascrpt_note/intro-website/src/routes/ portfolio / portfolio.component.jsx":"10","/Users/yalin/Documents/Git/javascrpt_note/intro-website/src/components/navbar/navbar.component.jsx":"11","/Users/yalin/Documents/Git/javascrpt_note/intro-website/src/components/mobile-nav/mobile-nav.component.jsx":"12","/Users/yalin/Documents/Git/javascrpt_note/intro-website/src/components/personal-iamge/personal-image.component.jsx":"13","/Users/yalin/Documents/Git/javascrpt_note/intro-website/src/components/test-component/testComponent.component.jsx":"14","/Users/yalin/Documents/Git/javascrpt_note/intro-website/src/components/career-tiem/career-item.component.jsx":"15","/Users/yalin/Documents/Git/javascrpt_note/intro-website/src/components/portfolio-item/portfolio-item.component.jsx":"16","/Users/yalin/Documents/Git/javascrpt_note/intro-website/src/components/pointer/pointer.component.jsx":"17","/Users/yalin/Documents/Git/javascrpt_note/intro-website/src/components/nav-link/nav-link.component.jsx":"18","/Users/yalin/Documents/Git/javascrpt_note/intro-website/src/components/burger/burger.component.jsx":"19"},{"size":857,"mtime":1675140626574,"results":"20","hashOfConfig":"21"},{"size":911,"mtime":1676198125267,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1674822136100,"results":"23","hashOfConfig":"21"},{"size":407,"mtime":1675140577014,"results":"24","hashOfConfig":"21"},{"size":390,"mtime":1674991933438,"results":"25","hashOfConfig":"21"},{"size":2202,"mtime":1676218870995,"results":"26","hashOfConfig":"21"},{"size":212,"mtime":1675158210341,"results":"27","hashOfConfig":"21"},{"size":1553,"mtime":1676199642945,"results":"28","hashOfConfig":"21"},{"size":14433,"mtime":1676219878509,"results":"29","hashOfConfig":"21"},{"size":925,"mtime":1676218777348,"results":"30","hashOfConfig":"21"},{"size":2118,"mtime":1676220912514,"results":"31","hashOfConfig":"21"},{"size":932,"mtime":1675218477892,"results":"32","hashOfConfig":"21"},{"size":314,"mtime":1675444890642,"results":"33","hashOfConfig":"21"},{"size":218,"mtime":1675217709865,"results":"34","hashOfConfig":"21"},{"size":1452,"mtime":1676219804198,"results":"35","hashOfConfig":"21"},{"size":2123,"mtime":1675771915819,"results":"36","hashOfConfig":"21"},{"size":1700,"mtime":1676220721836,"results":"37","hashOfConfig":"21"},{"size":635,"mtime":1676201062815,"results":"38","hashOfConfig":"21"},{"size":952,"mtime":1675649171096,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"98ixyt",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":2,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},"/Users/yalin/Documents/Git/javascrpt_note/intro-website/src/index.js",[],[],"/Users/yalin/Documents/Git/javascrpt_note/intro-website/src/App.js",["108"],[],"import { Routes, Route, useLocation } from 'react-router-dom';\nimport { AnimatePresence } from \"framer-motion\";\nimport Navigation from './routes/navigation/navigation.component';\nimport About from './routes/about/about.component';\nimport Portfolio from \"./routes/ portfolio / portfolio.component\";\nimport Resume from \"./routes/resume/resume.component\";\nimport Contact from './routes/contact/contact.component';\n\nimport './App.scss';\n\nfunction App() {\n\n  let location = useLocation();\n  return (  \n    <Routes location={location} key={location.pathname}>\n            <Route path=\"/\" element={<Navigation />}>\n\n              <Route index element={<About />} />\n              <Route path=\"portfolio\" element={<Portfolio />} />\n              <Route path=\"resume\" element={<Resume />} />\n              <Route path=\"contact\" element={<Contact />} />\n\n            </Route>\n    </Routes>\n  \n  );\n}\n\nexport default App;\n","/Users/yalin/Documents/Git/javascrpt_note/intro-website/src/reportWebVitals.js",[],[],"/Users/yalin/Documents/Git/javascrpt_note/intro-website/src/context/position.content.jsx",[],[],"/Users/yalin/Documents/Git/javascrpt_note/intro-website/src/context/toggle.context.jsx",[],[],"/Users/yalin/Documents/Git/javascrpt_note/intro-website/src/routes/about/about.component.jsx",["109"],[],"import { motion } from \"framer-motion\";\nimport TestComponent from \"../../components/test-component/testComponent.component\";\nimport PersonalImage from \"../../components/personal-iamge/personal-image.component\";\n\nimport './about.styles.scss';\nconst About = () => {\n    return (\n        <div  className=\"about\">\n            <motion.div className=\"about-container\"\n                animate={{ opacity: 1, y: [50, 0] }}\n                initial={{ opacity: 0 }}\n                transition={{ duration: 1.2, ease: \"easeOut\" }}\n            >\n\n                {/*<TestComponent content={\"about me\"} />*/}\n                <div className=\"head\">\n                    <PersonalImage />\n                </div>\n                <div className=\"content\">\n                    <h1 class=\"page-title\">ABOUT ME</h1>\n                    <p class=\"about-text\">\n                        私は6年ほどエンジニアとしての経験を持っています。自社開発、ECサイト運営、Slerなど、様々な職種を経験して参りました。\n                        データベースからWebアプリケーションまで幅広い開発経験を持ち、HTML、CSS、JavaScriptなどのWeb開発技術に熟練しており、クラウドサービスやデータベースに関するタスクの経験もあります。\n                        効率的で信頼性の高いコードを書くことができ、チームの一員として様々なプロジェクトに携わっておりました。語学力も活用し、幅広い情報源から情報を集めて技術についての解決策を見出すことができます。\n                        新しい技術の変化にも柔軟に対応し、挑戦することを好み、常に学習を続け、新しいスキルを身に付けています。\n                        スキルを習得するため、普段からオンラインコースの受講や資格の取得など努力を惜しみません。今後も自分自身の能力を拡張し、新たなチャレンジに踏み出していけることを望んでいます。\n                    </p>\n                </div>\n\n            </motion.div>\n        </div>\n    )\n}\n\nexport default About;","/Users/yalin/Documents/Git/javascrpt_note/intro-website/src/routes/contact/contact.component.jsx",[],[],"/Users/yalin/Documents/Git/javascrpt_note/intro-website/src/routes/navigation/navigation.component.jsx",["110","111"],[],"import { useState, useContext,useEffect,Fragment } from \"react\";\nimport { Outlet, Link } from \"react-router-dom\";\nimport { ToggleContext } from \"../../context/toggle.context\";\nimport { motion } from \"framer-motion\";\nimport Navbar from \"../../components/navbar/navbar.component\";\nimport MobileNav from '../../components/mobile-nav/mobile-nav.component';\n\nimport { ReactComponent as UpArrow } from '../../assets/up_arrow.svg';\nimport './navigation.styles.scss';\nconst Navigation = () => {\n    const { isMenuOpen } = useContext(ToggleContext);\n    const [showTopBtn, setShowTopBtn] = useState(false);\n    useEffect(() => {\n      window.addEventListener('scroll',()=>{\n          (window.scrollY>200)?setShowTopBtn(true):setShowTopBtn(false);\n      })\n    }, []);\n    const goToTop=()=>{\n        window.scrollTo({\n            top:0,behavior:'smooth'\n        });\n    };\n    \n    return (\n        <div>\n            <div className=\"container\">\n                <div className=\"nav\">\n                    <Fragment>\n                        <Navbar />\n                    </Fragment>\n                </div>\n                <div className=\"main\">\n                    {\n                        isMenuOpen ? <MobileNav /> :\n                            <Outlet />\n                    }\n                </div>\n                {showTopBtn? (\n                    <div className=\"back-top-buttom\" onClick={goToTop}>\n                        <UpArrow />\n                    </div>):null\n                }\n\n            </div>\n        </div>\n    )\n}\n\nexport default Navigation;","/Users/yalin/Documents/Git/javascrpt_note/intro-website/src/routes/resume/resume.component.jsx",["112","113","114","115","116"],[],"import { useEffect } from \"react\";\nimport { useAnimation, motion } from \"framer-motion\";\nimport { useInView } from \"react-intersection-observer\";\n\nimport CareerItem from \"../../components/career-tiem/career-item.component\";\nimport './resume.styles.scss';\n\n\nconst Resume = () => {\n    const listStyle = { listStyle: 'square' };\n    const achievementStyle = { paddingLeft: '1.25rem' };\n    return (\n        <div className=\"resume\">\n            <motion.div\n                className=\"resume-container\"\n                animate={{ opacity: 1, y: [50, 0] }}\n                initial={{ opacity: 0 }}\n                transition={{ duration: 1.2, ease: \"easeOut\" }}\n            >\n                <h1 className=\"page-title\">RESUME</h1>\n                <div className=\"resume-block\">\n                    <h1 className=\"resume-title\">プログラミングスキル </h1>\n                    <div className=\"resume-article\">\n                        <div className=\"skill-container\">\n                            <h3 className=\"resume-subtitle\">言語：</h3>\n                            <span className=\"skill\">Javascript</span>\n                            <span className=\"skill\">Typescript</span>\n                            <span className=\"skill\">Python</span>\n                            <span className=\"skill\">SQL</span>\n                            <span className=\"skill\">SCSS</span>\n                            <span className=\"skill\">PHP</span>\n                            <span className=\"skill\">C#</span>\n                        </div>\n                        <div className=\"skill-container\">\n                            <h3 className=\"resume-subtitle\">データベース:</h3>\n                            <span className=\"skill\">MySQL</span>\n                            <span className=\"skill\">Oracle</span>\n                            <span className=\"skill\">SQLServer</span>\n                        </div>\n                        <div className=\"skill-container\">\n                            <h3 className=\"resume-subtitle\">クラウド:</h3>\n                            <span className=\"skill\">AWS</span>\n                            <span className=\"skill\">Firebase</span>\n                        </div>\n                        <div className=\"skill-container\">\n                            <h3 className=\"resume-subtitle\">バージョン管理:</h3>\n                            <span className=\"skill\">Git</span>\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    <h1 className=\"resume-title\">資格</h1>\n                    <div className=\"resume-article\">\n                        <div className=\"certification-container\">\n                            <h3 className=\"resume-subtitle\">クラウド:</h3>\n                            <ul className=\"certification\">\n                                <li>AWS Certified Solutions Architect - Associate</li>\n                            </ul>\n                        </div>\n                        <div className=\"certification-container\">\n                            <h3 className=\"resume-subtitle\">データベース:</h3>\n                            <ul className=\"certification\">\n                                <li>Microsoft Certified Solutions Associate: SQL Server 2012/2014</li>\n                                <li>Oracle Database 11g Administrator Certified Associate</li>\n                            </ul>\n                        </div>\n\n                        <div className=\"certification-container\">\n                            <h3 className=\"resume-subtitle\">プログラミング:</h3>\n                            <ul className=\"certification\">\n                                <li>Microsoft Certified Solutions Developer: Web Applications</li>\n                                <li>Microsoft Specialist: Programming in HTML5 with JavaScript and CSS3</li>\n                            </ul>\n                        </div>\n                        <div className=\"certification-container\">\n                            <h3 className=\"resume-subtitle\">言語:</h3>\n                            <ul className=\"certification\">\n                                <li>JLPT N1</li>\n                                <li>TOEIC 720点</li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"resume-block\">\n                    <h1 className=\"resume-title\">職務経歴 </h1>\n                    <div className=\"resume-artic\">\n                        <div className=\"career-container\">\n                            <h3 className=\"company-name\">株式会社A社\n                                <span>(2020/1~現在)</span>\n                            </h3>\n                            <CareerItem\n                                business=\"Sler\"\n                                projectName=\"マクロツール\"\n                                occupation=\"システムエンジニア\"\n                                skills=\"エクセル、VB\"\n                                achievement={<div style={achievementStyle}>\n                                    <ul style={listStyle}>\n                                        <li>マクロツールの製造。</li>\n                                        <li>マクロツールのテスト。</li>\n                                        <li>AWS技術調査。</li>\n                                    </ul>\n                                </div>}\n                            />\n                            <CareerItem\n                                projectName=\"ドキュメント自動化システム\"\n                                occupation=\"システムエンジニア\"\n                                skills=\"Power Platform、VB\"\n                                achievement={<div style={achievementStyle}>\n                                    <ul style={listStyle}>\n                                        <li>エクセルでマクロの。</li>\n                                        <li>自動化ツールの製造。</li>\n                                        <li>自動化ツールのテスト。</li>\n                                    </ul>\n                                </div>}\n                            />\n                            <CareerItem\n                                projectName=\"業務システムの更新\"\n                                occupation=\"システムエンジニア\"\n                                skills=\"Vue、SQL、Oracle、Lambda\"\n                                achievement={<div style={achievementStyle}>\n                                    <ul style={listStyle}>\n                                        <li>システムの新画面の製造。</li>\n                                        <li>SQLの製造。</li>\n                                        <li>仕様書の作成。</li>\n                                    </ul>\n                                </div>}\n                            />\n                            <CareerItem\n                                projectName=\"在庫管理ツール\"\n                                occupation=\"フルスタックエンジニア\"\n                                skills=\"javascript、css、AWS EC2、AWS api gateway、AWS SDK\"\n                                achievement={<div style={achievementStyle}>\n                                    <ul style={listStyle}>\n                                        <li>画面のデーサンと開発。</li>\n                                        <li>AWS サービスの調査と実装。</li>\n                                        <li>ライブラリーの調査と実装。</li>\n                                        <li>データ処理に関するプログラミングの製造。</li>\n                                    </ul>\n                                </div>}\n                            />\n                            <CareerItem\n                                projectName=\"フルスタックエンジニア\"\n                                occupation=\"通話と業務システム\"\n                                skills={<p>jQuery、css、php、SQL、AWS RDS database<br />\n                                    AWS lambda、AWS EC2、AWS Connect</p>}\n                                achievement={<div style={achievementStyle}>\n                                    <ul style={listStyle}>\n                                        <li>担当チームが未経験な技術を調査と報告。</li>\n                                        <li>取引先の要望に応じてシステムの製造</li>\n                                        <li>既存システムの欠点を分析と改善方法の提案。</li>\n                                        <li>システムアーキテクチャの設計。</li>\n                                    </ul>\n                                </div>}\n                            />\n                            <CareerItem\n                                projectName=\"人事システム画面制作\"\n                                occupation=\"フロントエンドエンジニア\"\n                                skills=\"html、CSS\"\n                                achievement={<div style={achievementStyle}>\n                                    <ul style={listStyle}>\n                                        <li>システム画面設計とプログラミング製造を担当しておりました。</li>\n                                    </ul>\n                                </div>}\n                            />\n                        </div>\n                        <div className=\"career-container\">\n                            <h3 className=\"company-name\">株式会社B社\n                                <span>(2019/2~2020/1)</span>\n                            </h3>\n                            <CareerItem\n                                business=\"Sler\"\n                                projectName=\"物流システム\"\n                                occupation=\"システムエンジニア\"\n                                skills=\"C#、SQL Sever、VB\"\n                                achievement={<div style={achievementStyle}>\n                                    <ul style={listStyle}>\n                                        <li>システムエンジニアとして、取引先に常駐し、オフショアの開発チームと連携しました。</li>\n                                        <li>仕様書の制作と翻訳を務めました。</li>\n                                        <li>取引先と開発チームの連絡、進捗管理など務めました。</li>\n                                        <li>ソースレビューやテストを担当しました。</li>\n                                        <li>お急ぎ要件があった場合、プログラミングの製造も務めました。</li>\n                                    </ul>\n                                </div>}\n                            />\n                        </div>\n                        <div className=\"career-container\">\n                            <h3 className=\"company-name\">株式会社C社\n                                <span>(2018/5~2019/1)</span>\n                            </h3>\n                            <CareerItem\n                                business=\"EC\"\n                                projectName=\"ECサイト、CSMシステムメンテンスなど\"\n                                occupation=\"フルスタックエンジニア\"\n                                skills=\"PHP、Javascript、jQuery、css、MySQL、GitHub\"\n                                achievement={<div style={achievementStyle}>\n                                    <ul style={listStyle}>\n                                        <li>海外向けのECサイを立ち上げ、スムーズに稼働できました。</li>\n                                        <li>新規サビースのデザインと製造。</li>\n                                        <li>ECサイトの構築と運用監視。</li>\n                                        <li>海外向けの決済サビースを会社に導入しました。</li>\n                                    </ul>\n                                </div>}\n                            />\n                        </div>\n                        <div className=\"career-container\">\n                            <h3 className=\"company-name\">Cybersoft(Taiwan)\n                                <span>(2015/12~2017/6)</span>\n                            </h3>\n                            <CareerItem\n                                business=\"自社開発\"\n                                projectName=\"クレジットカート基幹システム\"\n                                occupation=\"フルスタックエンジニア\"\n                                skills=\"C#、SQLSever、jQuery、css\"\n                                achievement={<div style={achievementStyle}>\n                                    <ul style={listStyle}>\n                                        <li>PGとして業務に携わりました。</li>\n                                        <li>開発スゲジュールに遅れなく機能を交付できます。</li>\n                                        <li>先輩の任務を渡されたほど信用されました。</li>\n                                    </ul>\n                                </div>}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"resume-block\">\n                    <h1>学歴</h1>\n                    <div className=\"resume-article education\" style={achievementStyle}>\n                        <ul style={{ fontSize: '1.5rem' }}>\n                            <li><a target=\"_blank\" href=\"https://www.glis.ntnu.edu.tw/index.php/en/main/\">\n                                National Taiwan Normal University\n                                <span>Graduate Institute Of Library & Information Studies</span></a>\n                            </li>\n                            <li><a target=\"_blank\" href=\"https://history.nccu.edu.tw/eng/PageFront\">\n                                National Chengchi University<span>History</span></a>\n                            </li>\n                        </ul>\n                    </div>\n\n                </div>\n            </motion.div>\n        </div>)\n\n}\n\nexport default Resume;","/Users/yalin/Documents/Git/javascrpt_note/intro-website/src/routes/ portfolio / portfolio.component.jsx",["117"],[],"import TestComponent from \"../../components/test-component/testComponent.component\";\nimport { motion } from 'framer-motion';\n\nimport PortfolioItem from \"../../components/portfolio-item/portfolio-item.component\";\nimport project1 from './project1.png';\nimport './portfolio.styles.scss';\n\nconst Portfolio = () => {\n\n    return (\n        <div className=\"portfolio\">\n            <motion.div className=\"portfolio-container\"\n                animate={{ opacity: 1, y: [50, 0] }}\n                initial={{ opacity: 0 }}\n                transition={{ duration: 1.2, ease: \"easeOut\" }}\n            >\n                <h1 className=\"portfolio-title responsive\">PORTFOLIO</h1>\n                <div className=\"portfolio-block\">\n                    <PortfolioItem imgSrc={project1} />\n                    <PortfolioItem imgSrc={project1} />\n\n                </div>\n            </motion.div>\n        </div>\n    )\n}\n\nexport default Portfolio;","/Users/yalin/Documents/Git/javascrpt_note/intro-website/src/components/navbar/navbar.component.jsx",["118","119","120","121"],[],"import { Fragment, useState, useEffect, useMemo } from \"react\";\nimport BurgerMenu from \"../burger/burger.component\";\nimport NavLink from \"../nav-link/nav-link.component\";\nimport Pointer from \"../pointer/pointer.component\";\n\n\nimport \"./navbar.styles.scss\";\n\n\nconst Navbar = () => {\n    const [startPos, setStartPos] = useState(1);\n    const [endPos, setEndPos] = useState(1);\n    const [clicked,setClicked] = useState(false);\n\n    const hoverEnterHandler = (linkIdx) => {\n        setEndPos(linkIdx);\n\n    }\n    const hoverLeaveHandler = (linkIdx) => {\n        setStartPos(linkIdx);\n\n    }\n    const clickHandler = () => {\n        console.log(clicked);\n        setClicked(!clicked);\n    }\n    return (\n        <div className=\"navbar\" >\n            <div className=\"hide-navbar-content\">\n                <div className=\"hide-navbar\">\n                    <BurgerMenu />\n                </div>\n            </div>\n\n            <div className=\"nav-content\" >\n                <div className=\"title\">\n\n                    <h1>LIN MIYA</h1>\n                    <div className=\"occupation\">Web & Software Developer</div>\n                </div>\n                <div class=\"link-container\">\n                    <div className=\"link-group\">\n                        {/*<Pointer className=\"pointed\"/>*/}\n                        <NavLink mouseEnter={() => hoverEnterHandler(1)} mouseLeave={() => hoverLeaveHandler(1)} linkPath={\"/\"} pageName={\"ABOUT\"} />\n                        <NavLink mouseEnter={() => hoverEnterHandler(2)} mouseLeave={() => hoverLeaveHandler(2)} linkPath={\"/resume\"} pageName={\"RESUME\"} />\n                        <NavLink mouseEnter={() => hoverEnterHandler(3)} mouseLeave={() => hoverLeaveHandler(3)} linkPath={\"/portfolio\"} pageName={\"PORTFOLIO\"} />\n                        {/*<NavLink  mouseEnter={() => hoverEnterHandler(4) }  mouseLeave={() => hoverLeaveHandler(4) } linkPath={\"/contact\"} pageName={\"CONTACT\"} /> */}\n                        <Pointer step={{ start: startPos, end: endPos }} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Navbar;","/Users/yalin/Documents/Git/javascrpt_note/intro-website/src/components/mobile-nav/mobile-nav.component.jsx",["122"],[],"import { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ToggleContext } from '../../context/toggle.context';\nimport { motion } from \"framer-motion\";\nimport './mobile-nav.styles.scss';\n\nconst MobileNav = () => {\n\n    const { isMenuOpen, setIsMenuOpen } = useContext(ToggleContext);\n    const toggleMenu = () => {\n        setIsMenuOpen(!isMenuOpen);\n    }\n\n    return (\n        <div className=\"mobile-nav\">\n            <div className=\"mobile-nav-content\">\n                <div className=\"mobile-nav-links-group\">\n                    <Link to=\"/\" onClick={toggleMenu}>ABOUT</Link>\n                    <Link to=\"/resume\" onClick={toggleMenu}>RESUME</Link>\n                    <Link to=\"/portfolio\" onClick={toggleMenu}>PORTFOLIO</Link>\n                    <Link to=\"/contact\" onClick={toggleMenu}>CONTACT</Link>\n                </div>\n            </div>\n\n        </div>\n\n    )\n\n}\n\nexport default MobileNav;","/Users/yalin/Documents/Git/javascrpt_note/intro-website/src/components/personal-iamge/personal-image.component.jsx",["123"],[],"import AiHead from \"../../assets/ai-head.png\";\n\nimport './personal-image.styles.scss';\n\n\n\n\nconst PersonalImage = ()=>{\n    const class_name = [\"personal-image\"].join(' '); \n    return(\n        <div className={class_name}>\n            <img src={AiHead}></img>\n        </div>\n    )\n} \n\n\nexport default PersonalImage;","/Users/yalin/Documents/Git/javascrpt_note/intro-website/src/components/test-component/testComponent.component.jsx",[],[],"/Users/yalin/Documents/Git/javascrpt_note/intro-website/src/components/career-tiem/career-item.component.jsx",[],[],"/Users/yalin/Documents/Git/javascrpt_note/intro-website/src/components/portfolio-item/portfolio-item.component.jsx",["124"],[],"import { useState,useEffect } from 'react';\nimport { motion } from \"framer-motion\";\n\nimport { ReactComponent as WebLink } from '../../assets/icon-link.svg';\nimport { ReactComponent as GitRepo } from '../../assets/icons8-github.svg';\n\nimport './portfolio-item.styles.scss';\n\nconst PortfolioItem = ({ imgSrc, repoLink, webLink }) => {\n    const [hovered, setHovered] = useState(false);\n    useEffect(()=>{\n        if(window.innerWidth<941){\n            setHovered(true);\n        }   \n    });\n    const hoverHandler = () => {\n        if(window.innerWidth>940){\n            setHovered(!hovered);\n        }      \n    }\n    return (\n        <div className=\"portfolio-item\"\n            onMouseEnter={hoverHandler}\n            onMouseLeave={hoverHandler}\n        >\n            <div\n                style={{ backgroundImage: `url(${imgSrc})` }}\n                className={`portfolio-item-img`}\n                animate={{ x: 100 }} initial={false}\n            >\n                {\n                    hovered? <motion.div\n                            className=\"portfolio-item-shield\"\n                            initial={{ opacity: 0 }}\n                            animate={{ opacity: 1 }}\n                            exit={{ opacity: 0 }}\n                        >\n                            <div className='portfolio-item-shield-link' >\n                                <a href=\"www.google.com\">\n                                    <GitRepo className='git-repo' />\n                                </a>\n                            </div>\n                            <div className='portfolio-item-shield-link'>\n                                <a href={repoLink}>\n                                    <WebLink className='web-link' />\n                                </a>\n                            </div>\n                        </motion.div> : null\n                }\n            </div>\n            <div className=\"portfolio-item-text\">\n                <p>ext ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make</p>\n            </div>\n        </div>\n    )\n};\n\n\nexport default PortfolioItem;\n\n\n","/Users/yalin/Documents/Git/javascrpt_note/intro-website/src/components/pointer/pointer.component.jsx",["125"],[],"import { ReactComponent as PointerSVG } from '../../assets/pointer.svg';\nimport styled, { keyframes } from 'styled-components';\n\nconst goDownKeyFrame = (start, end) => {\n    const startPos = (start - 1) * 4;\n    const endPos = end==4?(end - 1) * 4:(end - 1) * 4.2;\n    if (endPos > startPos) {\n        return keyframes`\n        0%{\n                top: ${startPos}rem;           \n                transform:rotate(90deg);             \n        }\n        60%{\n            top:${endPos}rem;\n            transform: rotate(90deg);\n        }\n        70%{\n            top:${endPos - 0.7}rem;\n            transform: rotate(90deg);\n        }\n        80%{\n            top:${endPos}rem;\n            transform: rotate(90deg);\n        }\n        90%{\n            top:${endPos - 0.5}rem;\n            transform: rotate(90deg);\n        }\n        100%{\n            top:${endPos}rem;\n            transform: rotate(90deg);\n        }\n    `\n    } else {\n        return keyframes`\n        0%{\n            top: ${startPos}rem;           \n            transform:rotate(90deg);\n           \n        }\n\n        50%{\n            op: ${(startPos+endPos)/2}rem;           \n            transform:rotate(90deg);\n        }\n        100%{\n            top: ${endPos}rem;           \n            transform:rotate(90deg);\n        }\n        `\n    }\n\n};\n\nconst Pointer = styled(PointerSVG)`\n    height:50px;\n    weight:50px;\n    top:1rem;\n    left:3rem;\n    transform:rotate(90deg);\n    image-size:contain;\n    position:absolute;\n    animation-duration: 0.3s;\n    animation-fill-mode: forwards;\n    animation-timing-function: linear;\n    animation-name: ${({ step }) =>\n        goDownKeyFrame(step.start, step.end)};\n`;\n\nexport default Pointer;","/Users/yalin/Documents/Git/javascrpt_note/intro-website/src/components/nav-link/nav-link.component.jsx",[],[],"/Users/yalin/Documents/Git/javascrpt_note/intro-website/src/components/burger/burger.component.jsx",["126"],[],"import { useState,useContext } from 'react';\nimport {ToggleContext} from '../../context/toggle.context';\n\nimport './burger.styles.scss';\n\nconst BurgerMenu = () => {\n    // const [isOpen, setIsOpen] = useState(false);\n    // const openMenu = () => {\n    //     setIsOpen(!isOpen);\n    // }\n    const {isMenuOpen,setIsMenuOpen} = useContext(ToggleContext);\n    const toggleMenu = ()=>{\n        setIsMenuOpen(!isMenuOpen);\n    }\n    return (\n        <div onClick={toggleMenu}>\n            <div className='menu-button-container' >\n                <div className=\"burgermenu-container\">\n                    <button\n                        className={`burgermenu ${isMenuOpen ? `opened` : ``}`}\n\n                    >\n                        <span></span>\n                    </button>\n                </div>\n            </div>\n            <div className='menu-word'>\n                MENU\n            </div>\n        </div>\n    )\n}\n\nexport default BurgerMenu;",{"ruleId":"127","severity":1,"message":"128","line":2,"column":10,"nodeType":"129","messageId":"130","endLine":2,"endColumn":25},{"ruleId":"127","severity":1,"message":"131","line":2,"column":8,"nodeType":"129","messageId":"130","endLine":2,"endColumn":21},{"ruleId":"127","severity":1,"message":"132","line":2,"column":18,"nodeType":"129","messageId":"130","endLine":2,"endColumn":22},{"ruleId":"127","severity":1,"message":"133","line":4,"column":10,"nodeType":"129","messageId":"130","endLine":4,"endColumn":16},{"ruleId":"127","severity":1,"message":"134","line":1,"column":10,"nodeType":"129","messageId":"130","endLine":1,"endColumn":19},{"ruleId":"127","severity":1,"message":"135","line":2,"column":10,"nodeType":"129","messageId":"130","endLine":2,"endColumn":22},{"ruleId":"127","severity":1,"message":"136","line":3,"column":10,"nodeType":"129","messageId":"130","endLine":3,"endColumn":19},{"ruleId":"137","severity":1,"message":"138","line":229,"column":33,"nodeType":"139","messageId":"140","endLine":229,"endColumn":107,"fix":"141"},{"ruleId":"137","severity":1,"message":"138","line":233,"column":33,"nodeType":"139","messageId":"140","endLine":233,"endColumn":101,"fix":"142"},{"ruleId":"127","severity":1,"message":"131","line":1,"column":8,"nodeType":"129","messageId":"130","endLine":1,"endColumn":21},{"ruleId":"127","severity":1,"message":"143","line":1,"column":10,"nodeType":"129","messageId":"130","endLine":1,"endColumn":18},{"ruleId":"127","severity":1,"message":"134","line":1,"column":30,"nodeType":"129","messageId":"130","endLine":1,"endColumn":39},{"ruleId":"127","severity":1,"message":"144","line":1,"column":41,"nodeType":"129","messageId":"130","endLine":1,"endColumn":48},{"ruleId":"127","severity":1,"message":"145","line":23,"column":11,"nodeType":"129","messageId":"130","endLine":23,"endColumn":23},{"ruleId":"127","severity":1,"message":"133","line":4,"column":10,"nodeType":"129","messageId":"130","endLine":4,"endColumn":16},{"ruleId":"146","severity":1,"message":"147","line":12,"column":13,"nodeType":"139","endLine":12,"endColumn":31},{"ruleId":"148","severity":1,"message":"149","line":11,"column":5,"nodeType":"129","endLine":11,"endColumn":14,"suggestions":"150"},{"ruleId":"151","severity":1,"message":"152","line":6,"column":23,"nodeType":"153","messageId":"154","endLine":6,"endColumn":25},{"ruleId":"127","severity":1,"message":"155","line":1,"column":10,"nodeType":"129","messageId":"130","endLine":1,"endColumn":18},"no-unused-vars","'AnimatePresence' is defined but never used.","Identifier","unusedVar","'TestComponent' is defined but never used.","'Link' is defined but never used.","'motion' is defined but never used.","'useEffect' is defined but never used.","'useAnimation' is defined but never used.","'useInView' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"156","text":"157"},{"range":"158","text":"157"},"'Fragment' is defined but never used.","'useMemo' is defined but never used.","'clickHandler' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setHovered'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["159"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.",[12289,12289]," rel=\"noreferrer\"",[12591,12591],{"desc":"160","fix":"161"},"Add dependencies array: []",{"range":"162","text":"163"},[487,487],", []"]