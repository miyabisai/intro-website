{"ast":null,"code":"var _jsxFileName = \"/Users/yalin/Documents/Git/javascrpt_note/intro-website/src/components/burger/burger.component.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useContext } from 'react';\nimport { ToggleContext } from '../../context/toggle.context';\nimport './burger.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BurgerMenu = () => {\n  _s();\n  // const [isOpen, setIsOpen] = useState(false);\n  // const openMenu = () => {\n  //     setIsOpen(!isOpen);\n  // }\n  const {\n    isMenuOpen,\n    setIsMenuOpen\n  } = useContext(ToggleContext);\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: toggleMenu,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu-button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"burgermenu-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `burgermenu ${isMenuOpen ? `opened` : ``}`,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu-word\",\n      children: \"MENU\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_s(BurgerMenu, \"RtPQ80pWYGuXH4W5AcUgCKR1v0I=\");\n_c = BurgerMenu;\nexport default BurgerMenu;\nvar _c;\n$RefreshReg$(_c, \"BurgerMenu\");","map":{"version":3,"names":["useState","useContext","ToggleContext","BurgerMenu","isMenuOpen","setIsMenuOpen","toggleMenu"],"sources":["/Users/yalin/Documents/Git/javascrpt_note/intro-website/src/components/burger/burger.component.jsx"],"sourcesContent":["import { useState,useContext } from 'react';\nimport {ToggleContext} from '../../context/toggle.context';\n\nimport './burger.styles.scss';\n\nconst BurgerMenu = () => {\n    // const [isOpen, setIsOpen] = useState(false);\n    // const openMenu = () => {\n    //     setIsOpen(!isOpen);\n    // }\n    const {isMenuOpen,setIsMenuOpen} = useContext(ToggleContext);\n    const toggleMenu = ()=>{\n        setIsMenuOpen(!isMenuOpen);\n    }\n    return (\n        <div onClick={toggleMenu}>\n            <div className='menu-button-container' >\n                <div className=\"burgermenu-container\">\n                    <button\n                        className={`burgermenu ${isMenuOpen ? `opened` : ``}`}\n\n                    >\n                        <span></span>\n                    </button>\n                </div>\n            </div>\n            <div className='menu-word'>\n                MENU\n            </div>\n        </div>\n    )\n}\n\nexport default BurgerMenu;"],"mappings":";;AAAA,SAASA,QAAQ,EAACC,UAAU,QAAQ,OAAO;AAC3C,SAAQC,aAAa,QAAO,8BAA8B;AAE1D,OAAO,sBAAsB;AAAC;AAE9B,MAAMC,UAAU,GAAG,MAAM;EAAA;EACrB;EACA;EACA;EACA;EACA,MAAM;IAACC,UAAU;IAACC;EAAa,CAAC,GAAGJ,UAAU,CAACC,aAAa,CAAC;EAC5D,MAAMI,UAAU,GAAG,MAAI;IACnBD,aAAa,CAAC,CAACD,UAAU,CAAC;EAC9B,CAAC;EACD,oBACI;IAAK,OAAO,EAAEE,UAAW;IAAA,wBACrB;MAAK,SAAS,EAAC,uBAAuB;MAAA,uBAClC;QAAK,SAAS,EAAC,sBAAsB;QAAA,uBACjC;UACI,SAAS,EAAG,cAAaF,UAAU,GAAI,QAAO,GAAI,EAAE,EAAE;UAAA,uBAGtD;YAAA;YAAA;YAAA;UAAA;QAAa;UAAA;UAAA;UAAA;QAAA;MACR;QAAA;QAAA;QAAA;MAAA;IACP;MAAA;MAAA;MAAA;IAAA,QACJ,eACN;MAAK,SAAS,EAAC,WAAW;MAAA,UAAC;IAE3B;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAA,GA1BKD,UAAU;AAAA,KAAVA,UAAU;AA4BhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}